version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_USER: pixelgame
      POSTGRES_PASSWORD: pixelgame123
      POSTGRES_DB: pixelgame_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pixelgame"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    environment:
      - DATABASE_URL=postgres://pixelgame:pixelgame123@postgres:5432/pixelgame_db?sslmode=disable
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=pixelgame
      - DB_PASSWORD=pixelgame123
      - DB_NAME=pixelgame_db
      - DB_SSL_MODE=disable
      - REDIS_URL=redis://redis:6379
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - JWT_SECRET=your-secret-key-here
      - JWT_SECRET_KEY=your-secret-key-here
      - PORT=8080
    volumes:
      - ./migrations:/app/migrations

  migrate:
    image: migrate/migrate
    volumes:
      - ./migrations:/migrations
    command: [
      "-path", "/migrations",
      "-database", "postgres://pixelgame:pixelgame123@postgres:5432/pixelgame_db?sslmode=disable",
      "up"
    ]
    depends_on:
      postgres:
        condition: service_healthy

volumes:
  postgres_data: